buildscript {
    repositories {
        jcenter()
        google()


    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.3'
        classpath 'org.greenrobot:greendao-gradle-plugin:3.3.0' // add plugin
    }
}
apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'



allprojects {
    repositories {
        jcenter()
        google()

        maven { url "https://jitpack.io" }

    }
}
dependencies {
    implementation 'com.google.firebase:firebase-crashlytics:17.0.1'
    implementation 'com.google.android.gms:play-services-base:17.3.0'
    implementation 'com.google.android.gms:play-services-basement:17.3.0'
    implementation 'com.google.android.gms:play-services-tasks:17.1.0'
    implementation 'com.google.android.gms:play-services-location:17.0.0'
    implementation 'com.google.android.gms:play-services-analytics:17.0.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'org.roboguice:roboguice:2.0'
    implementation 'org.greenrobot:greendao:3.3.0'
    implementation 'org.greenrobot:greendao-generator:3.2.0'
    implementation files('libs/nineoldandroids-2.4.0.jar')
    implementation 'com.github.hivemq.hivemq-community-edition:hivemq-community-edition:2020.1'
    implementation group: 'com.hivemq', name: 'hivemq-mqtt-client', version: '1.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.preference:preference:1.1.1'
    implementation files('libs/swipelistview-1.0.jar')
    implementation files('libs/sshlib-v1.1.jar')
    implementation files('libs/alfresco-jlan.jar')
    implementation files('libs/cryptix-jce-provider.jar')
    implementation 'org.snmp4j:snmp4j:1.10.1'
    implementation files('libs/snmp4j-agent-2.3.3.jar')
    implementation files('libs/VirusTotalAPI.jar')


    // Required -- JUnit 4 framework
    testImplementation 'junit:junit:4.12'
    //testImplementation 'androidx.test:core:1.2.0'

    // Optional -- Mockito framework
    testImplementation "org.mockito:mockito-core:2.+"
    implementation 'com.android.support:support-annotations:28.0.0'
    implementation 'com.android.support.test:rules:1.0.2'
    implementation 'com.android.support.test:runner:1.0.2'
    // Optional -- UI testing with Espresso
   // androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    // Optional -- UI testing with UI Automator for Android X
     //implementation 'androidx.test.uiautomator:uiautomator:2.2.0'
//    implementation 'org.powermock:powermock:1.6.5'
//    implementation 'org.powermock:powermock-module-junit4:1.7.4'
//    implementation 'org.powermock:powermock-api-mockito:1.7.4'
    implementation 'com.android.support:multidex:1.0.3'
    // Optional -- Robolectric environment
    testImplementation 'org.robolectric:robolectric:4.3'

}

greendao{
    schemaVersion 1
    //generateTests true
   // targetGenDir "src/db/"
}

android {
    compileSdkVersion 29
    buildToolsVersion '28.0.3'
    defaultConfig {
        versionCode 7
        versionName "1.3"
        minSdkVersion 24
        targetSdkVersion 29
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        //   signingConfig signingConfigs.config
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    sourceSets {

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default hostage.location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    packagingOptions {
        pickFirst "META-INF/DEPENDENCIES"
        pickFirst "META-INF/INDEX.LIST"
        pickFirst "META-INF/io.netty.versions.properties"
    }
    // signing for release only works in the console
    boolean doSigningForRelease = System.console() != null
    if (doSigningForRelease) {
        signingConfigs {
            release {
                storeFile file(System.console().readLine("\n\$ Enter keystore path:  "))
                storePassword System.console().readLine("\n\$ Enter keystore password:  ")
                keyAlias System.console().readLine("\n\$ Enter key alias:  ")
                keyPassword System.console().readLine("\n\$ Enter key password:")
            }
        }
    }
    buildTypes {
        debug {
            debuggable true
            jniDebuggable true
            resValue "string", "google_maps_api_key", "AIzaSyDs3xp1-2KQojns5h7mWHHdQxAL-5AZ-q4"
        }
        if (doSigningForRelease) {
            release {
                debuggable false
                jniDebuggable false
                signingConfig signingConfigs.release
                resValue "string", "google_maps_api_key", "AIzaSyDs3xp1-2KQojns5h7mWHHdQxAL-5AZ-q4"
            }
        }
        release {
//            signingConfig signingConfigs.config
        }
    }
    lintOptions {
        abortOnError false
    }
    productFlavors {
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}
