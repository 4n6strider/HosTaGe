buildscript {
    repositories {
        mavenCentral()
       // google()
        jcenter()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.3'
    }
}
apply plugin: 'com.android.application'

repositories {
    mavenCentral()
    maven {
        url 'https://oss.sonatype.org/content/groups/public'
    }
    maven {
        url 'https://maven.google.com/'
        name 'Google'
    }
}

dependencies {
    implementation 'com.google.android.gms:play-services:4.+'
    implementation 'org.roboguice:roboguice:2.0'
    compile files('libs/nineoldandroids-2.4.0.jar')
    //noinspection GradleCompatible
    implementation 'com.android.support:support-v4:28.0.0'
    //compile fileTree(dir: 'libs', include: '*.jar')
    compile files('libs/swipelistview-1.0.jar')
    compile files('libs/sshlib-v1.1.jar')
   // compile files('libs/chart-library2.2.jar')
    //compile files('libs/jlan-5.jar')
    compile files('libs/alfresco-jlan.jar')
    compile files('libs/cryptix-jce-provider.jar')
    implementation 'org.snmp4j:snmp4j:1.10.1'
    compile files('libs/snmp4j-agent-2.3.3.jar')
    compile files('libs/VirusTotalAPI.jar')


    // Required -- JUnit 4 framework
    testImplementation 'junit:junit:4.12'
    // Optional -- Robolectric environment for Android X
    //testImplementation 'androidx.test:core:1.2.0'

    // Optional -- Mockito framework
    testImplementation 'org.mockito:mockito-core:2.8.9'
    implementation 'com.android.support:support-annotations:28.0.0'
    implementation 'com.android.support.test:rules:1.0.2'
    implementation 'com.android.support.test:runner:1.0.2'
    // Optional -- UI testing with Espresso
   // androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    // Optional -- UI testing with UI Automator for Android X
   // implementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    implementation 'org.powermock:powermock:1.6.5'
    implementation 'org.powermock:powermock-module-junit4:1.7.4'
    implementation 'org.powermock:powermock-api-mockito:1.7.4'
    implementation 'com.android.support:multidex:1.0.3'


}

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        versionCode 7
        versionName "1.3"
        minSdkVersion 23
        targetSdkVersion 28
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        //   signingConfig signingConfigs.config
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        //androidTest.setRoot('src')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default hostage.location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    // signing for release only works in the console
    boolean doSigningForRelease = System.console() != null
    if (doSigningForRelease) {
        signingConfigs {
            release {
                storeFile file(System.console().readLine("\n\$ Enter keystore path:  "))
                storePassword System.console().readLine("\n\$ Enter keystore password:  ")
                keyAlias System.console().readLine("\n\$ Enter key alias:  ")
                keyPassword System.console().readLine("\n\$ Enter key password:")
            }
        }
    }
    buildTypes {
        debug {
            debuggable true
            jniDebuggable true
            resValue "string", "google_maps_api_key", "AIzaSyDs3xp1-2KQojns5h7mWHHdQxAL-5AZ-q4"
        }
        if (doSigningForRelease) {
            release {
                debuggable false
                jniDebuggable false
                signingConfig signingConfigs.release
                resValue "string", "google_maps_api_key", "AIzaSyDs3xp1-2KQojns5h7mWHHdQxAL-5AZ-q4"
            }
        }
        release {
//            signingConfig signingConfigs.config
        }
    }
    lintOptions {
        abortOnError false
    }
    productFlavors {
    }
}
